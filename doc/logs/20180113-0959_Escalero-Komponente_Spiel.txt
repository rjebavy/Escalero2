Dem SCRUM Modell folgend 1 Review per Tag (24 Stunden); in meinem Fall Tageslog. 
Anmerkung: Bereich in geschwungenen Klammern {{} wurden heute nicht ausgeführt bzw. dienen als Vorlage. 


Escalero-Komponente: Spiel; Funktion - Spieleingang. 
===========================================================================
 
	SpielController; 
		Model(s): RundenTableau; SpielstandTableau;  . 
		View(s): Wurfzellen; Spielstand; .  
	



{{mySQL Tabelle: spieler 

SQL draft starts here *****************************************************

-- -----------------------------------------------------
-- Table `yii2escalero`.`spiel`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `yii2escalero`.`spiel` ;

CREATE TABLE IF NOT EXISTS `ressourcen-verwaltung`.`mitarbeiter` (
  `spielerID` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `spielerSpitzname` VARCHAR(25) NOT NULL,
  `spielerAngemeldet` BOOLEAN NOT NULL DEFAULT FALSE,
  PRIMARY KEY (`spielerID`),
ENGINE = InnoDB;

SQL draft ends here ******************************************************

	Quelle: https://dev.mysql.com/doc/refman/5.7/en/numeric-type-overview.html
		BOOL, BOOLEAN
		These types are synonyms for TINYINT(1). A value of zero is considered false. Nonzero values are considered true:
}



TODOs: 
{{1) Flussdiagramm EscaleroController in /doc; 12.1.18-12:23. 
2) Tabelle 'spieler' anlegen mit MySQL Workbench; SQL-script in /db-sql; default user Anonym inserted; 12.1.18-13:16.   
3) Yii DB-connector konfigurieren. 
4) dazugehöriges Model kodieren. 
	4.1) Entwurf, Flussdiagramm 'Anmelden'; 12.1.18-14:14. 
	4.2) Powerpoint, Flussdiagramm 'Anmelden'; 12.1.18-22:07. 
5) dazugehörige View kodieren. 
6) EscaleroController kodieren. 
7) Testen. 
	7.1) namespace Problem mit EscaleroController behoben. 
	7.2) Spitzname; Regel 'required' funktioniert (das lässt also nicht den im Text erwähnten Spielraum nicht anzumelden!). 
	7.3) Nach klicken des Anmeldebuttons: "Class 'app\modules\escalero\models\User' not found". 
		Muss eine Klasse 'Spieler' anlegen und Model 'AnmeldenForm' anpassen. 
			Als Vorlage für 'Spieler' die Klasse 'User' (in @app/models) verwenden. 
			In Anmeldeform einbinden der statischen Methoden findBySpitzname & logonBySpitzname aus Klasse Spieler.
	7.4) Irgendwas hat's da, nach klick auf [Anmelden], keine Fehlermeldung aber auch kein neuer Eintrag in DB! 18:50. 
		Versuch die ActiveRecord  Klasse Spieler via Gii zu generieren? schaut auch nicht anders aus als meine!  
		Für heute Fehlersuche 'Anmeldung' abgebrochen; 
		21.1.18-20:31. 
}


ACTIVITY: 
10:00 - 11:00: A5 Notizen durchgesehen; dieses Textfile mithilfe MVC Struktur 'Spiel' angelegt; OL-Kalenderauszug erzeugt & transferiert. 
		Q9h Appointment aktualisiert. 

12:00 - 13:25: Analyse MVC Struktur und Kode, yii-test, Country: 
		Bis auf actionDelete ist jeder action-Methode im Controller eine View zugeordnet. 
		In der protected Methode findModel() wird nach $id gesucht ("Finds the Country model based on its primary key value. ..")? 
			Was ist der primary key im Model Country (sprich der DB-Tabelle)? Spalte 'code'!! 
		Im karierten A4 Block MVC Strukturelemente notiert, 
			Gibt nur 2 Modellklassen: 'Country' (ActiveRecord) und davon abgeleitet 'CountrySearch' (Country). 
				Country ist ein ActiveRecord Modell und enthält public Methoden: 
					tableName(), 
					rules(), 
					attributeLabels(). 
				CountrySearch ist ein Country Modell und enthält public Methoden: 
					rules(), 
					scenarios(), 
					search($params). 
			Views Tabelle erstellt mit Spalten für use <namespaces>. 
			Liste der Controller Methoden actionXXXX (public) und die letzte findModel() (protected). 
		Recherche API Dokumentation: 
			was bedeutet 'safe' in rules()? siehe http://www.yiiframework.com/doc-2.0/yii-validators-safevalidator.html. 
					

				
 

>>> geschätztes Tagesende ??:??. 


